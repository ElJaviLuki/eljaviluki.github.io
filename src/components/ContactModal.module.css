/* src/components/ContactModal/ContactModal.module.css */

/* Opening Animations (Keyframes) */
@keyframes fadeInOverlay {
    from { opacity: 0; }
    to { opacity: 1; }
}

@keyframes scaleUpModal {
    from { opacity: 0; transform: scale(0.9); }
    to { opacity: 1; transform: scale(1); }
}

/* Closing Animations (Keyframes) */
@keyframes fadeOutOverlay {
    from { opacity: 1; }
    to { opacity: 0; }
}

@keyframes scaleDownModal {
    from { opacity: 1; transform: scale(1); }
    to { opacity: 0; transform: scale(0.9); }
}


.modalOverlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.6);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1050;
    backdrop-filter: blur(8px);
    padding: 1rem;
    /* Default opening animation */
    animation: fadeInOverlay 0.3s ease-out forwards;
}
.modalOverlay.closing {
    animation: fadeOutOverlay 0.3s ease-out forwards;
}


.modalContent {
    background: var(--glass-bg-color);
    backdrop-filter: blur(var(--glass-blur));
    padding: 2.5rem;
    border-radius: 12px;
    border: var(--border-standard);
    box-shadow: var(--glass-shadow), 0 10px 30px rgba(0,0,0,0.3);
    max-width: 680px;
    width: 95%;
    position: relative;
    transform-origin: center;
    color: var(--color-text-primary);
    opacity: 0; /* Initial state for opening animation */
    /* Default opening animation */
    animation: scaleUpModal 0.3s ease-out 0.1s forwards;
}
.modalContent.closing {
    opacity: 1; /* Ensure it's visible before closing animation starts */
    animation: scaleDownModal 0.3s ease-out forwards;
}


.modalTitle {
    font-size: clamp(1.6rem, 4vw, 2rem);
    color: #fff;
    text-align: center;
    margin-bottom: 1.5rem;
    padding-bottom: 1.25rem;
    border-bottom: 1px solid var(--glass-border-color);
}

.closeButton {
    position: absolute;
    top: 1rem;
    right: 1rem;
    background: transparent;
    border: none;
    color: var(--color-text-secondary);
    font-size: 1.6rem; /* Icon size */
    cursor: pointer;
    padding: 0.5rem; /* Clickable area */
    line-height: 1; /* Ensures icon is centered if padding affects it */
    transition: color 0.2s ease-in-out, transform 0.2s ease-in-out; /* Smooth transitions */
    border-radius: 50%; /* Optional: makes hover background round */
}

.closeButton:hover,
.closeButton:focus-visible {
    color: var(--color-accent-electric-blue); /* Brighter color on hover/focus */
    transform: scale(1.1); /* Slight scale effect */
    /* Optional: subtle background for better visibility of hover effect */
    /* background-color: rgba(255, 255, 255, 0.08); */
}
.closeButton:focus-visible {
    outline: 2px solid var(--color-accent-electric-blue);
    outline-offset: 2px;
}
.closeButton:disabled {
    cursor: default;
    opacity: 0.5;
}


.modalMainArea {
    display: flex;
    gap: 2rem;
    align-items: center;
}

.qrCodeContainer {
    flex-basis: 200px;
    flex-shrink: 0;
    border: 2px solid var(--color-accent-electric-blue);
    border-radius: 12px;
    padding: 4px;
    background-color: transparent;
}

.qrCodeImage {
    width: 100%;
    height: auto;
    display: block;
    background-color: #fff;
    padding: 12px;
    border-radius: 8px;
    box-sizing: border-box;
}

.modalLinksContainer {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.modalLinkItem {
    display: flex;
    align-items: center;
    gap: 1.25rem;
    padding: 1rem 1.5rem;
    border-radius: 8px;
    text-decoration: none;
    color: var(--color-text-primary);
    background-color: rgba(255, 255, 255, 0.05);
    border: 1px solid var(--glass-border-color);
    transition: var(--transition-smooth);
    font-size: 1rem;
    font-weight: 500;
}

.modalLinkItem:hover,
.modalLinkItem:focus-visible {
    background-color: rgba(0, 119, 255, 0.15);
    border-color: var(--color-accent-electric-blue);
    color: #fff;
    transform: translateX(5px);
    outline: none;
}
.modalLinkItem::after {
    display: none;
}


.modalIcon {
    font-size: 1.5rem;
    color: var(--color-accent-electric-blue);
    flex-shrink: 0;
    transition: color 0.3s ease;
}
.modalLinkItem:hover .modalIcon,
.modalLinkItem:focus-visible .modalIcon {
    color: var(--color-accent-teal);
}

.modalLabel {
    flex-grow: 1;
    line-height: 1.4;
}
.modalLabel strong {
    font-weight: 600; /* Ensure consistent bolding if not default */
}

.externalArrow {
    font-size: 0.9rem;
    margin-left: auto;
    color: var(--color-text-secondary);
    transition: color 0.3s ease, transform 0.3s ease;
}
.modalLinkItem:hover .externalArrow,
.modalLinkItem:focus-visible .externalArrow {
    color: var(--color-accent-teal);
    transform: translateX(2px) translateY(-2px);
}


/* Responsive adjustments */
@media (max-width: 600px) {
    .modalContent {
        max-width: 95%;
        padding: 1.5rem;
    }

    .modalMainArea {
        flex-direction: column;
        align-items: center;
        gap: 1.5rem;
    }

    .qrCodeContainer {
        flex-basis: auto;
        width: 100%;
        max-width: 220px;
    }

    .modalLinksContainer {
        width: 100%;
    }
}