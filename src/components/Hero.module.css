/* --- START OF FILE src/components/Hero/Hero.module.css --- */

.hero {
    /* === MODIFIED FOR CONSISTENT IMAGE SIZE === */
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    position: relative;
    /* MODIFICADO: Volver a ocultar overflow para evitar scrollbars */
    overflow: hidden;
    /* === END MODIFICATIONS === */
}

/* Contenedor de la Imagen */
.imageContainer {
    width: 100%;
    height: 50vh; /* Altura en móvil */
    flex-shrink: 0;
    /* MODIFICADO: Añadir position relative y overflow hidden */
    position: relative;
    overflow: hidden; /* Asegura que object-fit funcione como se espera */
}

.portrait {
    display: block;
    /* MODIFICADO: Usar object-fit y object-position en lugar de absolute positioning */
    width: 100%; /* Ocupa todo el ancho del contenedor */
    height: 100%; /* Ocupa toda la altura del contenedor */
    object-fit: cover; /* Cubre el contenedor, mantiene aspect ratio, recorta si es necesario */
    /* Ajusta object-position según sea necesario para centrar la figura principal */
    /* Ejemplos: 'center top', '50% 20%', 'center center' */
    /* Probemos con centrado horizontal y ligeramente hacia arriba */
    object-position: center 30%; /* Ajusta este valor (e.g., 30% desde arriba) para enfocar mejor el cuerpo */
    /* === REMOVED absolute positioning styles for mobile ===
    position: absolute;
    top: 0;
    left: 50%;
    transform: translateX(-50%);
    max-width: none;
    */
}

/* Contenedor del Texto */
.textContainer {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    justify-content: center;
    padding: 2rem 1.5rem; /* Padding móvil */
    text-align: center;
    position: relative;
    z-index: 2; /* Asegura que el texto esté sobre la imagen si hubiera superposición accidental */

    opacity: 0;
    transform: translateY(30px);
    animation: fadeInUp 0.8s ease-out 0.2s forwards;
}

/* Estilos de texto (MODIFICADO para controlar saltos) */
.name {
    font-size: clamp(2.5rem, 6vw, 4.5rem);
    margin-bottom: 0.75rem;
    font-weight: 900;
    letter-spacing: -1px;
    color: #ffffff;
    text-shadow: 0 2px 8px rgba(0, 0, 0, 0.5);
    /* Opcional: Forzar una sola línea por defecto si hay espacio */
    /* white-space: nowrap; */
}

/* Estilo para los spans dentro del nombre */
.name span {
    display: inline-block; /* Permite margen/padding y se comporta como inline */
    margin-right: 0.25em; /* Espacio entre palabras cuando están en línea */
    /* white-space: normal; */ /* Asegura que los spans puedan romperse si nowrap está en .name */
}
.name span:last-child {
    margin-right: 0; /* Sin espacio después de la última palabra */
}


.adjectives {
    font-family: var(--font-mono);
    font-size: clamp(0.8rem, 1.8vw, 1rem);
    text-transform: uppercase;
    color: var(--color-text-secondary);
    margin-bottom: 1rem;
    letter-spacing: 1px;
    word-spacing: 4px;
}

.tagline {
    font-size: clamp(1.3rem, 3vw, 1.8rem);
    font-weight: 600;
    margin-bottom: 0;
    color: var(--color-text-primary);
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
    line-height: 1.4;
}

/* --- Media Query para forzar el salto en 3 líneas --- */
/* Ajusta el valor de max-width según el punto donde quieras que ocurra el salto */
@media (max-width: 480px) {
    .name {
        /* Opcional: Quitar nowrap si se aplicó antes */
        /* white-space: normal; */
        text-align: center; /* Centrar cuando está en bloque */
    }
    .name span {
        display: block; /* Hace que cada span ocupe una línea */
        margin-right: 0; /* Quitar el espacio entre spans */
        line-height: 1.1; /* Ajustar el interlineado si es necesario */
    }
}


/* Desktop Styles */
@media (min-width: 900px) {
    .hero {
        flex-direction: row; /* Lado a lado */
    }

    .imageContainer {
        /* Ancho mantenido */
        width: 55%;
        height: 100vh;
        order: 2; /* Imagen a la derecha */
        /* position: relative; ya estaba */
        overflow: visible; /* Importante para evitar que me ampute los brazos :D */
    }

    .portrait {
        /* MODIFICADO: Vuelve a posicionamiento absoluto en desktop para permitir overflow visual */
        position: absolute;
        top: 0;
        /* Alinear borde DERECHO de la imagen con borde DERECHO del contenedor */
        right: 0;
        left: auto; /* Sobreescribir left: 50% de móvil */
        transform: none; /* Sobreescribir transform de móvil */
        height: 100%; /* 100% de 100vh */
        width: auto;   /* Ancho basado en proporción y altura */
        max-width: none; /* Permitir que desborde el 55% del contenedor */
        /* Ya no se necesita object-fit/object-position aquí, ya que el tamaño se basa en la altura y puede desbordar */
        object-fit: initial;
        object-position: initial;
        overflow: visible; /* Asegurar que mis codos no mueran amputados :D */
    }

    .textContainer {
        /* Ancho mantenido */
        width: 45%;
        order: 1; /* Texto a la izquierda */
        text-align: left;
        /* Padding mantenido */
        padding: 4rem 8% 4rem 5%;
        align-items: flex-start;
        justify-content: center;
    }

    /* Asegurar que en desktop los spans vuelvan a ser inline si se sobreescribió */
    .name span {
        display: inline-block; /* O inline, según prefieras */
        margin-right: 0.25em;
        line-height: initial; /* Resetear line-height */
    }
    .name span:last-child {
        margin-right: 0;
    }


    .tagline {
        margin-left: 0;
        margin-right: 0;
        max-width: none;
    }
}

/* Keyframes (sin cambios) */
@keyframes fadeInUp {
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* --- END OF FILE src/components/Hero/Hero.module.css --- */